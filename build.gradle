buildscript {
    repositories {
        mavenCentral()
        jcenter()
        mavenLocal()
    }
}

plugins {
    id 'java' // or 'groovy' Must be explicitly applied
    //id 'scala'
    id 'idea'
    id 'maven-publish'
    id 'org.jetbrains.kotlin.jvm' version '1.3.71'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
}

apply from: 'libraries.gradle'

//Get dependencies from Maven central repository
repositories {
    mavenCentral()
    jcenter()
    mavenLocal()
}

project.buildDir = "target"
targetCompatibility = "1.8"
sourceCompatibility = "1.8"

sourceSets {
    main {
        resources {
            include "**/*.properties"
            include "**/*.xml"
            include "**/*.csv"
            include "**/*.json"
            include "**/*.avsc"
        }

    }
}

//Project dependencies
dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    compile libraries.log4jCore
    compile libraries.log4jApi
    compile libraries.log4jSlf4jImpl
    compile libraries.slf4jApi
    compile libraries.slf4jExt

    compile libraries.commonsLang3

    compile libraries.jacksonCore
    compile libraries.jacksonDatabind
    compile libraries.jacksonAnnotations
    compile libraries.jacksonModule
    compile libraries.gson

    compile libraries.jooq
    compile libraries.antlr4Runtime

    testCompile libraries.hamcrestCore
    testCompile libraries.junit
    testCompile libraries.assertjCore

}

shadowJar {
    //relocate 'com.google.common', 'com.adwo.com.google.common'
    zip64 true
}

task run(type: JavaExec, dependsOn: classes) {
    main = 'Main'
    classpath sourceSets.main.runtimeClasspath
    classpath configurations.runtime
}

task copyToShell(type: Copy)
copyToShell {
    from('target/libs')
    into('./')
    include('*.jar')
}
copyToShell.dependsOn shadowJar

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
